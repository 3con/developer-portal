---
custom:
  writeEnvVars: ${file(./env.yml)}
  webpackIncludeModules: true

service: "${file(./env.yml):SERVICE_NAME}"

plugins:
   - serverless-plugin-write-env-vars
   - serverless-offline
   - serverless-run-function-plugin
   - serverless-webpack

package:
  exclude:
    - package.json
  include:
    - lib
    - node_modules
    - .env

provider:
  memory: 256
  name: aws
  region: us-east-1
  runtime: nodejs4.3
  stage: dev
  timeout: 30
  iamRoleStatements:
    -
      Action:
        - "s3:*"
      Effect: Allow
      Resource:
        - "arn:aws:s3:::${file(./env.yml):S3_BUCKET_ICONS}/*"
    -
      Action:
        - "ses:SendEmail"
      Effect: Allow
      Resource:
        - "*"
    -
      Action:
        - "cognito-identity:*"
        - "cognito-idp:*"
      Effect: Allow
      Resource:
        - "${file(./env.yml):COGNITO_POOL_ARN}"
    -
      Action:
        - "cloudwatchlogs:*"
      Effect: Allow
      Resource:
        - "*"

functions:
  authorizer:
    handler: authorizer.authorizer
  logger:
      handler: logger.handler

  adminAppApprove:
    handler: admin.appApprove
    events:
      -
        http:
          authorizer: authorizer
          cors: true
          method: post
          path: "admin/apps/{id}/approve"
          default:
            statusCode: 204
  adminApps:
    handler: admin.apps
    events:
      -
        http:
          authorizer: authorizer
          cors: true
          method: get
          path: "admin/apps"
  adminUsers:
    handler: admin.users
    events:
      -
        http:
          authorizer: authorizer
          cors: true
          method: get
          path: "admin/users"
  adminUserAdmin:
    handler: admin.userAdmin
    events:
      -
        http:
          authorizer: authorizer
          cors: true
          method: post
          path: "admin/users/{email}/admin"
          default:
            statusCode: 204
  adminUserEnable:
    handler: admin.userEnable
    events:
      -
        http:
          authorizer: authorizer
          cors: true
          method: post
          path: "admin/users/{email}/enable"
          default:
            statusCode: 204
  appsApprove:
    handler: apps-approve.handler
    events:
      -
        http:
          authorizer: authorizer
          cors: true
          method: post
          path: "vendor/apps/{appId}/approve"
          default:
            statusCode: 202
  appsCreate:
    handler: apps-create.handler
    events:
      -
        http:
          authorizer: authorizer
          cors: true
          method: post
          path: vendor/apps
          default:
            statusCode: 201
  appsDetail:
    handler: apps-detail.handler
    events:
      -
        http:
          authorizer: authorizer
          cors: true
          method: get
          path: "vendor/apps/{appId}"
      -
        http:
          authorizer: authorizer
          cors: true
          method: get
          path: "vendor/apps/{appId}/versions/{version}"
  appsIconsLinks:
    handler: apps-icons.links
    events:
      -
        http:
          authorizer: authorizer
          cors: true
          method: post
          path: "vendor/apps/{appId}/icons"
  appsIconsUpload:
    handler: apps-icons.upload
    events:
      -
        s3:
          bucket: "${file(./env.yml):S3_BUCKET_ICONS}"
          event: "s3:ObjectCreated:Put"
          suffix: .png
  appsList:
    handler: apps-list.handler
    events:
      -
        http:
          authorizer: authorizer
          cors: true
          method: get
          path: vendor/apps
  appsUpdate:
    handler: apps-update.handler
    events:
      -
        http:
          authorizer: authorizer
          cors: true
          method: patch
          path: vendor/apps/{appId}
          default:
            statusCode: 204
  appsVersionsList:
    handler: apps-versions.list
    events:
      -
        http:
          authorizer: authorizer
          cors: true
          method: get
          path: "vendor/apps/{appId}/versions"
  appsVersionsRollback:
    handler: apps-versions.rollback
    events:
      -
        http:
          authorizer: authorizer
          cors: true
          method: post
          path: "vendor/apps/{appId}/versions/{version}/rollback"
          default:
            statusCode: 204

  authEmailTrigger:
    handler: auth.emailTrigger
  authConfirm:
    handler: auth.confirm
    events:
      -
        http:
          cors: true
          method: post
          path: "auth/confirm/{email}/{code}"
          default:
            statusCode: 204
      -
        http:
          cors: true
          method: get
          path: "auth/confirm/{email}/{code}"
  authConfirmResend:
    handler: auth.confirmResend
    events:
      -
        http:
          cors: true
          method: post
          path: auth/confirm
  authForgot:
    handler: auth.forgot
    events:
      -
        http:
          cors: true
          method: post
          path: "auth/forgot/{email}"
          default:
            statusCode: 204
  authForgotConfirm:
    handler: auth.forgotConfirm
    events:
      -
        http:
          cors: true
          method: post
          path: "auth/forgot/{email}/confirm"
          default:
            statusCode: 204
  authLogin:
    handler: auth.login
    events:
      -
        http:
          cors: true
          method: post
          path: auth/login
  authProfile:
    handler: auth.profile
    events:
      -
        http:
          authorizer: authorizer
          cors: true
          method: get
          path: auth/profile
  authProfileChange:
    handler: auth.profileChange
    events:
      -
        http:
          authorizer: authorizer
          cors: true
          method: put
          path: auth/profile
          default:
            statusCode: 204
  authSignup:
    handler: auth.signup
    events:
      -
        http:
          cors: true
          method: post
          path: auth/signup

  publicDetail:
    handler: public.detail
    events:
      -
        http:
          cors: true
          method: get
          path: "apps/{appId}"
      -
        http:
          cors: true
          method: get
          path: "apps/{appId}/versions/{version}"
  publicList:
    handler: public.list
    events:
      -
        http:
          cors: true
          method: get
          path: apps
  publicVersions:
    handler: public.versions
    events:
      -
        http:
          cors: true
          method: get
          path: "apps/{appId}/versions"
  publicVendors:
    handler: public.vendorsList
    events:
      -
        http:
          cors: true
          method: get
          path: "vendors"
  publicVendor:
    handler: public.vendorDetail
    events:
      -
        http:
          cors: true
          method: get
          path: "vendors/{vendor}"
